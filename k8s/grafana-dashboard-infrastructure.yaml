apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-infrastructure
  namespace: default
data:
  infrastructure.json: |-
    {
      "id": null,
      "title": "Infrastructure Monitoring",
      "tags": ["infrastructure", "kubernetes"],
      "style": "dark",
      "timezone": "browser",
      "panels": [
          {
            "id": 1,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "{{instance}}"
              }
            ],
            "yAxes": [
              {
                "min": 0,
                "max": 100,
                "unit": "percent"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "100 * (1 - ((node_memory_MemAvailable_bytes or node_memory_MemFree_bytes) / node_memory_MemTotal_bytes))",
                "legendFormat": "{{instance}}"
              }
            ],
            "yAxes": [
              {
                "min": 0,
                "max": 100,
                "unit": "percent"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Disk Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - ((node_filesystem_avail_bytes{fstype!=\"tmpfs\", mountpoint!~\"/boot.*|/var/lib/docker.*\"} * 100) / node_filesystem_size_bytes{fstype!=\"tmpfs\", mountpoint!~\"/boot.*|/var/lib/docker.*\"})",
                "legendFormat": "{{instance}} - {{mountpoint}}"
              }
            ],
            "yAxes": [
              {
                "min": 0,
                "max": 100,
                "unit": "percent"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Network I/O",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(node_network_receive_bytes_total{device!~\"lo|veth.*|docker.*|flannel.*|cni.*\"}[5m])",
                "legendFormat": "{{instance}} - {{device}} - Receive"
              },
              {
                "expr": "rate(node_network_transmit_bytes_total{device!~\"lo|veth.*|docker.*|flannel.*|cni.*\"}[5m])",
                "legendFormat": "{{instance}} - {{device}} - Transmit"
              }
            ],
            "yAxes": [
              {
                "unit": "bytes"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          },
          {
            "id": 5,
            "title": "Pod Count",
            "type": "stat",
            "targets": [
              {
                "expr": "count(count by (pod) (kube_pod_info))",
                "legendFormat": "Total Pods"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"}
              }
            },
            "gridPos": {"h": 4, "w": 6, "x": 0, "y": 16}
          },
          {
            "id": 6,
            "title": "Node Count",
            "type": "stat",
            "targets": [
              {
                "expr": "count(count by (node) (kube_node_info))",
                "legendFormat": "Total Nodes"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"}
              }
            },
            "gridPos": {"h": 4, "w": 6, "x": 6, "y": 16}
          },
          {
            "id": 7,
            "title": "Container Restarts (Last 5m)",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(increase(kube_pod_container_status_restarts_total[5m]))",
                "legendFormat": "Restarts in 5m"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "thresholds"},
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": 0},
                    {"color": "yellow", "value": 1},
                    {"color": "red", "value": 5}
                  ]
                }
              }
            },
            "gridPos": {"h": 4, "w": 6, "x": 12, "y": 16}
          },
          {
            "id": 8,
            "title": "Load Average",
            "type": "stat",
            "targets": [
              {
                "expr": "node_load1",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 18, "y": 16}
          },
          {
            "id": 9,
            "title": "Pod Status",
            "type": "graph",
            "targets": [
              {
                "expr": "kube_pod_status_phase{phase=\"Running\"}",
                "legendFormat": "Running - {{pod}}"
              },
              {
                "expr": "kube_pod_status_phase{phase=\"Pending\"}",
                "legendFormat": "Pending - {{pod}}"
              },
              {
                "expr": "kube_pod_status_phase{phase=\"Failed\"}",
                "legendFormat": "Failed - {{pod}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 20}
          },

          {
            "id": 10,
            "title": "Pod Restart Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(kube_pod_container_status_restarts_total[5m])",
                "legendFormat": "{{pod}} - {{container}}"
              }
            ],
            "yAxes": [
              {
                "min": 0,
                "unit": "ops"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 28}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
    } 